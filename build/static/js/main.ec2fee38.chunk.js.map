{"version":3,"sources":["Components/AdhesiveComponent.js","Components/Adhesive.js","Components/KeyWords.js","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["AhdhesiveElement","_ref","add","options","index","OnDeleteOption","OnAddhesiveSelect","onRemoveAdhesive","OnAddhesiveElmSelect","console","log","Option","Select","react_default","a","createElement","style","display","gap","flexDirection","es_select","width","onChange","value","map","opt","key","input","type","placeholder","e","target","es_button","danger","onClick","Adhesive","_useState","useState","option","name","_useState2","Object","slicedToArray","adhesive","setAdhesive","_useState3","_useState4","filter","_x","i","ad","_step2","_iterator2","_createForOfIteratorHelper","entries","s","n","done","_ref6","_ref5","elm","push","err","f","Fragment","Ele","AdhesiveComponent","_step","adh","_iterator","_ref3","_ref2","x","icon","PlusCircleOutlined","length","notification","open","message","description","concat","toConsumableArray","upload","Dragger","action","className","InboxOutlined","Keywords","Step","Steps","steps","title","content","Components_Adhesive","KeyWords","App","_React$useState","React","_React$useState2","current","setCurrent","justifyContent","item","success","margin","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById","module","exports","p"],"mappings":"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","file":"static/js/main.ec2fee38.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {Select, Input, Button} from \"antd\";\n\nconst  AhdhesiveElement = function ({add, options, OnDeleteOption, index, OnAddhesiveSelect, onRemoveAdhesive, OnAddhesiveElmSelect}) {\n\n    console.log(index);\n\n    const {Option} = Select;\n    return (\n    <div style={{display:\"flex\", \"gap\":\"8px\", flexDirection:\"row\"}}>\n            <Select style={{ width: \"130px\" }} onChange={value => OnAddhesiveSelect(value, index)}>\n        {options.map((opt, index)=> {\n            return (\n                <Option key={index} value={opt}>\n                    {opt}\n                </Option>\n            );\n        })}\n      </Select>\n    <Input type=\"text\" placeholder=\"Entre une value\" onChange={(e) => OnAddhesiveElmSelect(index, e.target.value)}/>\n    { \n    \n        index!==0 && (\n        \n        <Button type=\"primary\" danger onClick={() => onRemoveAdhesive(index)}>Remove</Button>)\n    }\n\n    </div>\n      )\n}\n\nexport default AhdhesiveElement;\n","import AhdhesiveElement from './AdhesiveComponent';\nimport React, {useState} from 'react';\n\nimport {PlusCircleOutlined, InboxOutlined} from '@ant-design/icons';\nimport { Form, Modal, Button, Select, Upload, Input, Space, notification, Steps, message } from 'antd';\nimport { icons } from 'antd/lib/image/PreviewGroup';\n\n\nfunction Adhesive(){\n\n    const [adhesive, setAdhesive] = useState([{\"option\":[\"name\", \"brand\", \"family\"], \"name\":\"\"}])\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const {Option} = Select;\n  \n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n\n  const add_adhesive = () => {\n    \n    if (adhesive.length>2){\n      notification.open({\n        message: 'Notifcation',\n        description:\n          'Vous ne pouvez ajouter que 3 Elements',\n        onClick: () => {\n          console.log('Notification Clicked!');\n        },\n      });\n    }else{\n\n      setAdhesive([...adhesive, adhesive[0]])\n    }\n\n  }\n\n  const OnAddhesiveSelect = (value, index)=>{\n    \n    // console.log(value, index)\n    let adh = []\n    for (const [i, elm] of adhesive.entries()){\n      // console.log(index, elm);\n      if(i!=index){\n        console.log(index, elm);\n        console.log(elm[\"option\"].filter((x) => x!=value));\n        adh.push({\"option\":[\"name\", \"brand\", \"family\"].filter((x) => x!=value), \"name\": elm[\"name\"]})\n      }\n      else{\n        console.log(elm)\n        adh.push(elm)\n      }\n\n      setAdhesive(adh);\n\n    }\n    console.log(adhesive);\n\n  }\n\n  const onRemoveAdhesive = (index) => {\n\n    console.log(index, \"remove\");\n    // console.log(adhesive.filter((_x, i) => i!=index));\n    setAdhesive(adhesive.filter((_x, i) => i!=index));\n  }\n\n  const OnAddhesiveElmSelect = (index, value) => {\n\n    let ad = []\n\n    console.log(index, value)\n    for (const [i, elm] of adhesive.entries()){\n      if (index===i){\n        ad.push({\"option\": elm[\"option\"], name: value})\n      }\n      else{\n        ad.push(elm)\n      }\n    }\n    console.log(ad)\n    setAdhesive(ad)\n  }\n  return (\n    <div>\n      <>\n      {adhesive.map((Ele, index)=>{\n        return (\n          <AhdhesiveElement index={index} key={index} options={Ele.option} OnAddhesiveSelect={OnAddhesiveSelect} onRemoveAdhesive={onRemoveAdhesive} OnAddhesiveElmSelect={OnAddhesiveElmSelect}/>\n        )\n      })}\n      \n      \n      <Button type=\"dashed\" icon={< PlusCircleOutlined />} onClick={add_adhesive}>\n                AddKey Value\n      </Button>\n      <Upload.Dragger name=\"files\" action=\"/upload.do\">\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to upload PDF</p>\n      </Upload.Dragger>\n    </>\n    </div>\n  );\n\n\n}\n\nexport default Adhesive;\n\n\n","import React, { useState } from \"react\";\n\nconst Keywords = function (){\n\n    return (\n    <div>keywords Elements</div>\n    )\n\n}\n\nexport default Keywords","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport React, { useState } from 'react';\nimport {Steps, Button, message} from 'antd';\n\nimport Adhesive from './Components/Adhesive';\nimport Keywords from './Components/KeyWords';\n\n\nconst { Step } = Steps;\n\nconst steps = [\n  {\n    title: 'Create Adhesive',\n    content: <Adhesive />,\n  },\n  {\n    title: 'Create KeyWord',\n    content: <Keywords />,\n  },\n];\n\nconst App = () => {\n  const [current, setCurrent] = React.useState(0);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  return (\n    <div style={{display: \"flex\", justifyContent:\"center\"}}>\n      <div className='main'>\n      <Steps current={current}>\n        {steps.map(item => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n      <div className=\"steps-content\">{steps[current].content}</div>\n      <div className=\"steps-action\">\n        {current < steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => next()}>\n            Create Adhesive\n          </Button>\n        )}\n        {current === steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n            Save Adhesive\n          </Button>\n        )}\n        {current > 0 && (\n          <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n            Previous\n          </Button>\n        )}\n      </div>\n\n    </div>\n\n    </div>\n    \n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}